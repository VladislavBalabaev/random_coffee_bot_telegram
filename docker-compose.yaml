name: nespresso

services:
  db:
    image: postgres:15
    container_name: nespresso_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - nespresso_network
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data

  bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nespresso_bot
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./logs:/usr/src/app/logs
    networks:
      - nespresso_network
    stdin_open: true              # Keeps STDIN open
    tty: true                     # Allocates a pseudo-TTY
    command: python -m nespresso

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nespresso_api
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./logs:/usr/src/app/logs
    ports:
      - "8000:8000"
    networks:
      - nespresso_network
    command: uvicorn nespresso.api.app:app --host 0.0.0.0 --port 8000 --app-dir src --reload --log-level info

networks:
  nespresso_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
